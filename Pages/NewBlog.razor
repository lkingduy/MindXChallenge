@page "/newblog"
@attribute [Authorize]
@using MindXChallenge.Data
@using MindXChallenge.Data.Models
@inject WeatherForecastService ForecastService
@using System.Text.Json;
@using AntDesign.TableModels;
@using System.ComponentModel.DataAnnotations;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<Breadcrumb Style="margin: 16px 0;">
    <BreadcrumbItem>Home</BreadcrumbItem>
    <BreadcrumbItem>New Blog</BreadcrumbItem>
</Breadcrumb>


<Form Model="@blogData"
      LabelColSpan="4"
      WrapperColSpan="8"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed">
    <FormItem Label="Title">
        <Input @bind-Value="@context.Name" />
    </FormItem>
    <FormItem Label="Content">
        <TextArea @bind-Value="@context.Contents" />
    </FormItem>
    <FormItem Label="DatePicker">
        <DatePicker @bind-Value="@context.Time" />
    </FormItem>
    <FormItem WrapperColOffset="4" WrapperColSpan="8">
        <Button HtmlType="submit">
            Submit
        </Button>
    </FormItem>
</Form>

@code {
    private BlogData blogData = new BlogData();
    private ClaimsPrincipal user;
    private string userId;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _claims = user.Claims;
            userId = _claims.FirstOrDefault().Value;
        }
    }

    private void OnFinish(EditContext editContext)
    {
        blogData.UserId = userId;
        ForecastService.CreateBlog(blogData);
    }

    private void OnFinishFailed(EditContext editContext)
    {

    }

}
